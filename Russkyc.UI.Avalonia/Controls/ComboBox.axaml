<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="using:System"
    x:ClassModifier="internal">
    <Design.PreviewWith>
        <Border Padding="20">
            <StackPanel Spacing="10">
                <ComboBox HorizontalAlignment="Stretch" PlaceholderText="Default ComboBox">
                    <ComboBoxItem>Apple</ComboBoxItem>
                    <ComboBoxItem>Banana</ComboBoxItem>
                    <ComboBoxItem>Blueberry</ComboBoxItem>
                    <ComboBoxItem>Grapes</ComboBoxItem>
                    <ComboBoxItem>Pineapple</ComboBoxItem>
                </ComboBox>
                <ComboBox
                    HorizontalAlignment="Stretch"
                    IsEnabled="False"
                    PlaceholderText="Disabled ComboBox">
                    <ComboBoxItem>Apple</ComboBoxItem>
                    <ComboBoxItem>Banana</ComboBoxItem>
                    <ComboBoxItem>Blueberry</ComboBoxItem>
                    <ComboBoxItem>Grapes</ComboBoxItem>
                    <ComboBoxItem>Pineapple</ComboBoxItem>
                </ComboBox>
                <ComboBox HorizontalAlignment="Stretch" PlaceholderText="Error">
                    <DataValidationErrors.Error>
                        <sys:Exception>
                            <x:Arguments>
                                <x:String>Please select a fruit</x:String>
                            </x:Arguments>
                        </sys:Exception>
                    </DataValidationErrors.Error>
                    <ComboBoxItem>Apple</ComboBoxItem>
                    <ComboBoxItem>Banana</ComboBoxItem>
                    <ComboBoxItem>Blueberry</ComboBoxItem>
                    <ComboBoxItem>Grapes</ComboBoxItem>
                    <ComboBoxItem>Pineapple</ComboBoxItem>
                </ComboBox>
            </StackPanel>
        </Border>
    </Design.PreviewWith>

    <Thickness x:Key="ComboBoxTopHeaderMargin">0,0,0,4</Thickness>
    <x:Int32 x:Key="ComboBoxPopupMaxNumberOfItems">15</x:Int32>
    <x:Int32 x:Key="ComboBoxPopupMaxNumberOfItemsThatCanBeShownOnOneSide">7</x:Int32>

    <ControlTheme x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="{DynamicResource Radius}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource PopoverBrush}" />
        <Setter Property="Padding" Value="{DynamicResource ComboBoxItemThemePadding}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <ControlTemplate>
                <Border
                    x:Name="PART_ItemBorder"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}">
                    <Grid>
                        <Border
                            x:Name="PART_Overlay"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />
                        <ContentPresenter
                            x:Name="PART_ContentPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </Border>
            </ControlTemplate>
        </Setter>

        <!--  PointerOver state  -->
        <Style Selector="^:pointerover">
            <Style Selector="^ /template/ Border#PART_Overlay">
                <Setter Property="Background" Value="{DynamicResource SurfaceOverlayDeepenBrush}" />
            </Style>
        </Style>

        <!--  Disabled state  -->
        <Style Selector="^:disabled /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource MutedBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource MutedForegroundBrush}" />
        </Style>

        <!--  Pressed state  -->
        <Style Selector="^:pressed">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            <Style Selector="^ /template/ Border#PART_Overlay">
                <Setter Property="Background" Value="{DynamicResource SurfaceOverlayDeepenBrush}" />
            </Style>
        </Style>

        <!--  Selected state  -->
        <Style Selector="^:selected">
            <Style Selector="^ /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}" />
            </Style>
            <!--  Selected Disabled state  -->
            <Style Selector="^:disabled /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource ComboBoxItemBackgroundSelectedDisabled}" />
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemForegroundSelectedDisabled}" />
            </Style>
            <!--  Selected PointerOver state  -->
            <Style Selector="^:pointerover /template/ ContentPresenter">
                <Style Selector="^ /template/ Border#PART_Overlay">
                    <Setter Property="Background" Value="{DynamicResource LightOverlayBrush}" />
                </Style>
            </Style>
            <!--  Selected Pressed state  -->
            <Style Selector="^:pressed /template/ ContentPresenter">
                <Style Selector="^ /template/ Border#PART_Overlay">
                    <Setter Property="Background" Value="{DynamicResource LightenOverlayBrush}" />
                </Style>
            </Style>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <Setter Property="Padding" Value="{DynamicResource Padding}" />
        <Setter Property="FocusAdorner" Value="{x:Null}" />
        <Setter Property="MaxDropDownHeight" Value="504" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}" />
        <Setter Property="CornerRadius" Value="{DynamicResource Radius}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="MinHeight" Value="{DynamicResource ControlMinHeight}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="PlaceholderForeground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel HorizontalAlignment="Stretch" Spacing="4" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <ControlTemplate>
                <DataValidationErrors>
                    <Grid ColumnDefinitions="*,32">
                        <Border
                            x:Name="PART_Border"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            MinWidth="{DynamicResource ComboBoxThemeMinWidth}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />
                        <Border
                            x:Name="PART_Overlay"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />
                        <TextBlock
                            x:Name="PlaceholderTextBlock"
                            Grid.Column="0"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding PlaceholderForeground}"
                            IsVisible="{TemplateBinding SelectionBoxItem,
                                                        Converter={x:Static ObjectConverters.IsNull}}"
                            Opacity="0.3"
                            Text="{TemplateBinding PlaceholderText}" />
                        <ContentControl
                            x:Name="ContentPresenter"
                            Grid.Column="0"
                            Margin="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" />
                        <Image
                            Grid.Column="1"
                            Height="12"
                            Margin="0,0,10,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            IsHitTestVisible="False"
                            UseLayoutRounding="False">
                            <Image.Resources>
                                <Pen
                                    x:Key="IconPen"
                                    Brush="{DynamicResource MutedForegroundBrush}"
                                    Thickness="1.5" />
                            </Image.Resources>
                            <DrawingImage>
                                <DrawingGroup>
                                    <GeometryDrawing Geometry="F1 M7 15L12 20L17 15" Pen="{DynamicResource IconPen}" />
                                    <GeometryDrawing Geometry="F1 M7 9L12 4L17 9" Pen="{DynamicResource IconPen}" />
                                </DrawingGroup>
                            </DrawingImage>
                        </Image>
                        <Popup
                            x:Name="PART_Popup"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            InheritsTransform="True"
                            IsLightDismissEnabled="True"
                            IsOpen="{TemplateBinding IsDropDownOpen,
                                                     Mode=TwoWay}"
                            PlacementTarget="PART_Border"
                            WindowManagerAddShadowHint="False">
                            <Border
                                x:Name="PopupBorder"
                                Margin="0,4,0,0"
                                Padding="4"
                                HorizontalAlignment="Stretch"
                                Background="{DynamicResource PopoverBrush}"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="{DynamicResource ActiveBorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                                <ScrollViewer
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <ItemsPresenter x:Name="PART_ItemsPresenter" ItemsPanel="{TemplateBinding ItemsPanel}" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </DataValidationErrors>
            </ControlTemplate>
        </Setter>

        <!--  PointerOver State  -->
        <Style Selector="^:pointerover /template/ Border#PART_Border">
            <Style Selector="^ /template/ Border#PART_Overlay">
                <Setter Property="Background" Value="{DynamicResource LightenOverlayBrush}" />
            </Style>
            <Style Selector="^ /template/ Border#PART_Border">
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
            </Style>
        </Style>

        <!--  Pressed State  -->
        <Style Selector="^:pressed">
            <Style Selector="^ /template/ Border#PART_Overlay">
                <Setter Property="Background" Value="{DynamicResource DarkenOverlayBrush}" />
            </Style>
        </Style>

        <!--  Error State  -->
        <Style Selector="^:error /template/ Border#PART_Border">
            <Setter Property="BorderBrush" Value="{DynamicResource DestructiveBrush}" />
        </Style>

        <!--  Focus Pressed State  -->
        <Style Selector="^:focused:pressed">
            <Style Selector="^ /template/ PathIcon#DropDownGlyph">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxDropDownGlyphForegroundFocusedPressed}" />
            </Style>
        </Style>

        <!--  Focused State  -->
        <Style Selector="^:dropdownopen">
            <Style Selector="^ /template/ Border#PART_Border">
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                <Setter Property="BorderThickness" Value="{DynamicResource ActiveBorderThickness}" />
            </Style>
        </Style>

        <!--  Disabled State  -->
        <Style Selector="^:disabled">
            <Setter Property="Foreground" Value="{DynamicResource MutedForegroundBrush}" />
            <Style Selector="^ /template/ Border#PART_Border">
                <Setter Property="Background" Value="{DynamicResource MutedBrush}" />
            </Style>
            <Style Selector="^ /template/ ContentControl#ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundDisabled}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundDisabled}" />
            </Style>
            <Style Selector="^ /template/ PathIcon#DropDownGlyph">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxDropDownGlyphForegroundDisabled}" />
            </Style>
        </Style>
    </ControlTheme>

</ResourceDictionary>